// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sexp_basic_add
SEXP sexp_basic_add(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_add(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_add(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sub
SEXP sexp_basic_sub(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_sub(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sub(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_mul
SEXP sexp_basic_mul(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_mul(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_mul(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_div
SEXP sexp_basic_div(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_div(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_div(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_pow
SEXP sexp_basic_pow(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_pow(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_pow(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_diff
SEXP sexp_basic_diff(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_diff(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_diff(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_expand
SEXP sexp_basic_expand(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_expand(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_expand(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_neg
SEXP sexp_basic_neg(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_neg(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_neg(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_abs
SEXP sexp_basic_abs(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_abs(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_abs(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_erf
SEXP sexp_basic_erf(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_erf(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_erf(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_erfc
SEXP sexp_basic_erfc(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_erfc(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_erfc(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sin
SEXP sexp_basic_sin(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_sin(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sin(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_cos
SEXP sexp_basic_cos(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_cos(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_cos(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_tan
SEXP sexp_basic_tan(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_tan(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_tan(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_asin
SEXP sexp_basic_asin(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_asin(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_asin(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acos
SEXP sexp_basic_acos(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acos(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acos(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_atan
SEXP sexp_basic_atan(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_atan(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_atan(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_csc
SEXP sexp_basic_csc(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_csc(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_csc(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sec
SEXP sexp_basic_sec(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_sec(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sec(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_cot
SEXP sexp_basic_cot(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_cot(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_cot(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acsc
SEXP sexp_basic_acsc(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acsc(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acsc(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_asec
SEXP sexp_basic_asec(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_asec(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_asec(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acot
SEXP sexp_basic_acot(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acot(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acot(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sinh
SEXP sexp_basic_sinh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_sinh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sinh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_cosh
SEXP sexp_basic_cosh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_cosh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_cosh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_tanh
SEXP sexp_basic_tanh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_tanh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_tanh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_asinh
SEXP sexp_basic_asinh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_asinh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_asinh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acosh
SEXP sexp_basic_acosh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acosh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acosh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_atanh
SEXP sexp_basic_atanh(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_atanh(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_atanh(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_csch
SEXP sexp_basic_csch(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_csch(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_csch(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sech
SEXP sexp_basic_sech(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_sech(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sech(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_coth
SEXP sexp_basic_coth(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_coth(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_coth(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acsch
SEXP sexp_basic_acsch(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acsch(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acsch(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_asech
SEXP sexp_basic_asech(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_asech(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_asech(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_acoth
SEXP sexp_basic_acoth(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_acoth(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_acoth(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_lambertw
SEXP sexp_basic_lambertw(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_lambertw(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_lambertw(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_zeta
SEXP sexp_basic_zeta(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_zeta(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_zeta(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_dirichlet_eta
SEXP sexp_basic_dirichlet_eta(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_dirichlet_eta(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_dirichlet_eta(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_gamma
SEXP sexp_basic_gamma(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_gamma(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_gamma(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_sqrt
SEXP sexp_basic_sqrt(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_sqrt(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_sqrt(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_exp
SEXP sexp_basic_exp(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_exp(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_exp(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_log
SEXP sexp_basic_log(SEXP exta);
RcppExport SEXP _symengine_sexp_basic_log(SEXP extaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_log(exta));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_subs2
SEXP sexp_basic_subs2(SEXP exte, SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_subs2(SEXP exteSEXP, SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exte(exteSEXP);
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_subs2(exte, exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_evalf
SEXP sexp_basic_evalf(SEXP extb, SEXP bits, SEXP real);
RcppExport SEXP _symengine_sexp_basic_evalf(SEXP extbSEXP, SEXP bitsSEXP, SEXP realSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    Rcpp::traits::input_parameter< SEXP >::type bits(bitsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type real(realSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_evalf(extb, bits, real));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_type
SEXP sexp_basic_type(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_type(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_type(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_str
SEXP sexp_basic_str(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_str(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_str(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_hash
SEXP sexp_basic_hash(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_hash(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_hash(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_eq
SEXP sexp_basic_eq(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_eq(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_eq(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_neq
SEXP sexp_basic_neq(SEXP exta, SEXP extb);
RcppExport SEXP _symengine_sexp_basic_neq(SEXP extaSEXP, SEXP extbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type exta(extaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type extb(extbSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_neq(exta, extb));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_symbol
SEXP sexp_basic_symbol(SEXP RString);
RcppExport SEXP _symengine_sexp_basic_symbol(SEXP RStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type RString(RStringSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_symbol(RString));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_parse
SEXP sexp_basic_parse(SEXP RString);
RcppExport SEXP _symengine_sexp_basic_parse(SEXP RStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type RString(RStringSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_parse(RString));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_const
SEXP sexp_basic_const(SEXP string);
RcppExport SEXP _symengine_sexp_basic_const(SEXP stringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type string(stringSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_const(string));
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_zero
SEXP sexp_const_zero();
RcppExport SEXP _symengine_sexp_const_zero() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_zero());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_one
SEXP sexp_const_one();
RcppExport SEXP _symengine_sexp_const_one() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_one());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_minus_one
SEXP sexp_const_minus_one();
RcppExport SEXP _symengine_sexp_const_minus_one() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_minus_one());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_I
SEXP sexp_const_I();
RcppExport SEXP _symengine_sexp_const_I() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_I());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_pi
SEXP sexp_const_pi();
RcppExport SEXP _symengine_sexp_const_pi() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_pi());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_E
SEXP sexp_const_E();
RcppExport SEXP _symengine_sexp_const_E() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_E());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_EulerGamma
SEXP sexp_const_EulerGamma();
RcppExport SEXP _symengine_sexp_const_EulerGamma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_EulerGamma());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_Catalan
SEXP sexp_const_Catalan();
RcppExport SEXP _symengine_sexp_const_Catalan() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_Catalan());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_GoldenRatio
SEXP sexp_const_GoldenRatio();
RcppExport SEXP _symengine_sexp_const_GoldenRatio() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_GoldenRatio());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_infinity
SEXP sexp_const_infinity();
RcppExport SEXP _symengine_sexp_const_infinity() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_infinity());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_neginfinity
SEXP sexp_const_neginfinity();
RcppExport SEXP _symengine_sexp_const_neginfinity() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_neginfinity());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_complex_infinity
SEXP sexp_const_complex_infinity();
RcppExport SEXP _symengine_sexp_const_complex_infinity() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_complex_infinity());
    return rcpp_result_gen;
END_RCPP
}
// sexp_const_nan
SEXP sexp_const_nan();
RcppExport SEXP _symengine_sexp_const_nan() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_const_nan());
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_integer_fromint
SEXP sexp_basic_integer_fromint(SEXP x);
RcppExport SEXP _symengine_sexp_basic_integer_fromint(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_integer_fromint(x));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_integer_fromstr
SEXP sexp_basic_integer_fromstr(SEXP RString);
RcppExport SEXP _symengine_sexp_basic_integer_fromstr(SEXP RStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type RString(RStringSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_integer_fromstr(RString));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_integer_getint
SEXP sexp_basic_integer_getint(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_integer_getint(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_integer_getint(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_realdouble
SEXP sexp_basic_realdouble(SEXP x);
RcppExport SEXP _symengine_sexp_basic_realdouble(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_realdouble(x));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_realdouble_getd
SEXP sexp_basic_realdouble_getd(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_realdouble_getd(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_realdouble_getd(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isNumber
SEXP sexp_basic_isNumber(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isNumber(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isNumber(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isInteger
SEXP sexp_basic_isInteger(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isInteger(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isInteger(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isRational
SEXP sexp_basic_isRational(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isRational(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isRational(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isSymbol
SEXP sexp_basic_isSymbol(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isSymbol(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isSymbol(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isComplex
SEXP sexp_basic_isComplex(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isComplex(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isComplex(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isRealDouble
SEXP sexp_basic_isRealDouble(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isRealDouble(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isRealDouble(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isComplexDouble
SEXP sexp_basic_isComplexDouble(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isComplexDouble(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isComplexDouble(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isRealMPFR
SEXP sexp_basic_isRealMPFR(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isRealMPFR(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isRealMPFR(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_isComplexMPC
SEXP sexp_basic_isComplexMPC(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_isComplexMPC(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_isComplexMPC(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_num_iszero
SEXP sexp_basic_num_iszero(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_num_iszero(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_num_iszero(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_num_isnegative
SEXP sexp_basic_num_isnegative(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_num_isnegative(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_num_isnegative(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_num_ispositive
SEXP sexp_basic_num_ispositive(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_num_ispositive(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_num_ispositive(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_basic_num_iscomplex
SEXP sexp_basic_num_iscomplex(SEXP ext);
RcppExport SEXP _symengine_sexp_basic_num_iscomplex(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_basic_num_iscomplex(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_symengine_ascii_art
SEXP sexp_symengine_ascii_art();
RcppExport SEXP _symengine_sexp_symengine_ascii_art() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_symengine_ascii_art());
    return rcpp_result_gen;
END_RCPP
}
// sexp_symengine_version
SEXP sexp_symengine_version();
RcppExport SEXP _symengine_sexp_symengine_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(sexp_symengine_version());
    return rcpp_result_gen;
END_RCPP
}
// sexp_symengine_have_component
SEXP sexp_symengine_have_component(SEXP s);
RcppExport SEXP _symengine_sexp_symengine_have_component(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_symengine_have_component(s));
    return rcpp_result_gen;
END_RCPP
}
// sexp_vecbasic_length
size_t sexp_vecbasic_length(SEXP ext);
RcppExport SEXP _symengine_sexp_vecbasic_length(SEXP extSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_vecbasic_length(ext));
    return rcpp_result_gen;
END_RCPP
}
// sexp_vecbasic_concentrate
SEXP sexp_vecbasic_concentrate(SEXP dots);
RcppExport SEXP _symengine_sexp_vecbasic_concentrate(SEXP dotsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type dots(dotsSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_vecbasic_concentrate(dots));
    return rcpp_result_gen;
END_RCPP
}
// sexp_vecbasic_subset
SEXP sexp_vecbasic_subset(SEXP ext, SEXP idx);
RcppExport SEXP _symengine_sexp_vecbasic_subset(SEXP extSEXP, SEXP idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    Rcpp::traits::input_parameter< SEXP >::type idx(idxSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_vecbasic_subset(ext, idx));
    return rcpp_result_gen;
END_RCPP
}
// sexp_vecbasic_get
SEXP sexp_vecbasic_get(SEXP ext, SEXP n);
RcppExport SEXP _symengine_sexp_vecbasic_get(SEXP extSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext(extSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_vecbasic_get(ext, n));
    return rcpp_result_gen;
END_RCPP
}
// sexp_vecbasic_assign
SEXP sexp_vecbasic_assign(SEXP ext1, SEXP idx, SEXP ext2);
RcppExport SEXP _symengine_sexp_vecbasic_assign(SEXP ext1SEXP, SEXP idxSEXP, SEXP ext2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ext1(ext1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ext2(ext2SEXP);
    rcpp_result_gen = Rcpp::wrap(sexp_vecbasic_assign(ext1, idx, ext2));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP R_ExternalPtrTag(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_symengine_sexp_basic_add", (DL_FUNC) &_symengine_sexp_basic_add, 2},
    {"_symengine_sexp_basic_sub", (DL_FUNC) &_symengine_sexp_basic_sub, 2},
    {"_symengine_sexp_basic_mul", (DL_FUNC) &_symengine_sexp_basic_mul, 2},
    {"_symengine_sexp_basic_div", (DL_FUNC) &_symengine_sexp_basic_div, 2},
    {"_symengine_sexp_basic_pow", (DL_FUNC) &_symengine_sexp_basic_pow, 2},
    {"_symengine_sexp_basic_diff", (DL_FUNC) &_symengine_sexp_basic_diff, 2},
    {"_symengine_sexp_basic_expand", (DL_FUNC) &_symengine_sexp_basic_expand, 1},
    {"_symengine_sexp_basic_neg", (DL_FUNC) &_symengine_sexp_basic_neg, 1},
    {"_symengine_sexp_basic_abs", (DL_FUNC) &_symengine_sexp_basic_abs, 1},
    {"_symengine_sexp_basic_erf", (DL_FUNC) &_symengine_sexp_basic_erf, 1},
    {"_symengine_sexp_basic_erfc", (DL_FUNC) &_symengine_sexp_basic_erfc, 1},
    {"_symengine_sexp_basic_sin", (DL_FUNC) &_symengine_sexp_basic_sin, 1},
    {"_symengine_sexp_basic_cos", (DL_FUNC) &_symengine_sexp_basic_cos, 1},
    {"_symengine_sexp_basic_tan", (DL_FUNC) &_symengine_sexp_basic_tan, 1},
    {"_symengine_sexp_basic_asin", (DL_FUNC) &_symengine_sexp_basic_asin, 1},
    {"_symengine_sexp_basic_acos", (DL_FUNC) &_symengine_sexp_basic_acos, 1},
    {"_symengine_sexp_basic_atan", (DL_FUNC) &_symengine_sexp_basic_atan, 1},
    {"_symengine_sexp_basic_csc", (DL_FUNC) &_symengine_sexp_basic_csc, 1},
    {"_symengine_sexp_basic_sec", (DL_FUNC) &_symengine_sexp_basic_sec, 1},
    {"_symengine_sexp_basic_cot", (DL_FUNC) &_symengine_sexp_basic_cot, 1},
    {"_symengine_sexp_basic_acsc", (DL_FUNC) &_symengine_sexp_basic_acsc, 1},
    {"_symengine_sexp_basic_asec", (DL_FUNC) &_symengine_sexp_basic_asec, 1},
    {"_symengine_sexp_basic_acot", (DL_FUNC) &_symengine_sexp_basic_acot, 1},
    {"_symengine_sexp_basic_sinh", (DL_FUNC) &_symengine_sexp_basic_sinh, 1},
    {"_symengine_sexp_basic_cosh", (DL_FUNC) &_symengine_sexp_basic_cosh, 1},
    {"_symengine_sexp_basic_tanh", (DL_FUNC) &_symengine_sexp_basic_tanh, 1},
    {"_symengine_sexp_basic_asinh", (DL_FUNC) &_symengine_sexp_basic_asinh, 1},
    {"_symengine_sexp_basic_acosh", (DL_FUNC) &_symengine_sexp_basic_acosh, 1},
    {"_symengine_sexp_basic_atanh", (DL_FUNC) &_symengine_sexp_basic_atanh, 1},
    {"_symengine_sexp_basic_csch", (DL_FUNC) &_symengine_sexp_basic_csch, 1},
    {"_symengine_sexp_basic_sech", (DL_FUNC) &_symengine_sexp_basic_sech, 1},
    {"_symengine_sexp_basic_coth", (DL_FUNC) &_symengine_sexp_basic_coth, 1},
    {"_symengine_sexp_basic_acsch", (DL_FUNC) &_symengine_sexp_basic_acsch, 1},
    {"_symengine_sexp_basic_asech", (DL_FUNC) &_symengine_sexp_basic_asech, 1},
    {"_symengine_sexp_basic_acoth", (DL_FUNC) &_symengine_sexp_basic_acoth, 1},
    {"_symengine_sexp_basic_lambertw", (DL_FUNC) &_symengine_sexp_basic_lambertw, 1},
    {"_symengine_sexp_basic_zeta", (DL_FUNC) &_symengine_sexp_basic_zeta, 1},
    {"_symengine_sexp_basic_dirichlet_eta", (DL_FUNC) &_symengine_sexp_basic_dirichlet_eta, 1},
    {"_symengine_sexp_basic_gamma", (DL_FUNC) &_symengine_sexp_basic_gamma, 1},
    {"_symengine_sexp_basic_sqrt", (DL_FUNC) &_symengine_sexp_basic_sqrt, 1},
    {"_symengine_sexp_basic_exp", (DL_FUNC) &_symengine_sexp_basic_exp, 1},
    {"_symengine_sexp_basic_log", (DL_FUNC) &_symengine_sexp_basic_log, 1},
    {"_symengine_sexp_basic_subs2", (DL_FUNC) &_symengine_sexp_basic_subs2, 3},
    {"_symengine_sexp_basic_evalf", (DL_FUNC) &_symengine_sexp_basic_evalf, 3},
    {"_symengine_sexp_basic_type", (DL_FUNC) &_symengine_sexp_basic_type, 1},
    {"_symengine_sexp_basic_str", (DL_FUNC) &_symengine_sexp_basic_str, 1},
    {"_symengine_sexp_basic_hash", (DL_FUNC) &_symengine_sexp_basic_hash, 1},
    {"_symengine_sexp_basic_eq", (DL_FUNC) &_symengine_sexp_basic_eq, 2},
    {"_symengine_sexp_basic_neq", (DL_FUNC) &_symengine_sexp_basic_neq, 2},
    {"_symengine_sexp_basic_symbol", (DL_FUNC) &_symengine_sexp_basic_symbol, 1},
    {"_symengine_sexp_basic_parse", (DL_FUNC) &_symengine_sexp_basic_parse, 1},
    {"_symengine_sexp_basic_const", (DL_FUNC) &_symengine_sexp_basic_const, 1},
    {"_symengine_sexp_const_zero", (DL_FUNC) &_symengine_sexp_const_zero, 0},
    {"_symengine_sexp_const_one", (DL_FUNC) &_symengine_sexp_const_one, 0},
    {"_symengine_sexp_const_minus_one", (DL_FUNC) &_symengine_sexp_const_minus_one, 0},
    {"_symengine_sexp_const_I", (DL_FUNC) &_symengine_sexp_const_I, 0},
    {"_symengine_sexp_const_pi", (DL_FUNC) &_symengine_sexp_const_pi, 0},
    {"_symengine_sexp_const_E", (DL_FUNC) &_symengine_sexp_const_E, 0},
    {"_symengine_sexp_const_EulerGamma", (DL_FUNC) &_symengine_sexp_const_EulerGamma, 0},
    {"_symengine_sexp_const_Catalan", (DL_FUNC) &_symengine_sexp_const_Catalan, 0},
    {"_symengine_sexp_const_GoldenRatio", (DL_FUNC) &_symengine_sexp_const_GoldenRatio, 0},
    {"_symengine_sexp_const_infinity", (DL_FUNC) &_symengine_sexp_const_infinity, 0},
    {"_symengine_sexp_const_neginfinity", (DL_FUNC) &_symengine_sexp_const_neginfinity, 0},
    {"_symengine_sexp_const_complex_infinity", (DL_FUNC) &_symengine_sexp_const_complex_infinity, 0},
    {"_symengine_sexp_const_nan", (DL_FUNC) &_symengine_sexp_const_nan, 0},
    {"_symengine_sexp_basic_integer_fromint", (DL_FUNC) &_symengine_sexp_basic_integer_fromint, 1},
    {"_symengine_sexp_basic_integer_fromstr", (DL_FUNC) &_symengine_sexp_basic_integer_fromstr, 1},
    {"_symengine_sexp_basic_integer_getint", (DL_FUNC) &_symengine_sexp_basic_integer_getint, 1},
    {"_symengine_sexp_basic_realdouble", (DL_FUNC) &_symengine_sexp_basic_realdouble, 1},
    {"_symengine_sexp_basic_realdouble_getd", (DL_FUNC) &_symengine_sexp_basic_realdouble_getd, 1},
    {"_symengine_sexp_basic_isNumber", (DL_FUNC) &_symengine_sexp_basic_isNumber, 1},
    {"_symengine_sexp_basic_isInteger", (DL_FUNC) &_symengine_sexp_basic_isInteger, 1},
    {"_symengine_sexp_basic_isRational", (DL_FUNC) &_symengine_sexp_basic_isRational, 1},
    {"_symengine_sexp_basic_isSymbol", (DL_FUNC) &_symengine_sexp_basic_isSymbol, 1},
    {"_symengine_sexp_basic_isComplex", (DL_FUNC) &_symengine_sexp_basic_isComplex, 1},
    {"_symengine_sexp_basic_isRealDouble", (DL_FUNC) &_symengine_sexp_basic_isRealDouble, 1},
    {"_symengine_sexp_basic_isComplexDouble", (DL_FUNC) &_symengine_sexp_basic_isComplexDouble, 1},
    {"_symengine_sexp_basic_isRealMPFR", (DL_FUNC) &_symengine_sexp_basic_isRealMPFR, 1},
    {"_symengine_sexp_basic_isComplexMPC", (DL_FUNC) &_symengine_sexp_basic_isComplexMPC, 1},
    {"_symengine_sexp_basic_num_iszero", (DL_FUNC) &_symengine_sexp_basic_num_iszero, 1},
    {"_symengine_sexp_basic_num_isnegative", (DL_FUNC) &_symengine_sexp_basic_num_isnegative, 1},
    {"_symengine_sexp_basic_num_ispositive", (DL_FUNC) &_symengine_sexp_basic_num_ispositive, 1},
    {"_symengine_sexp_basic_num_iscomplex", (DL_FUNC) &_symengine_sexp_basic_num_iscomplex, 1},
    {"_symengine_sexp_symengine_ascii_art", (DL_FUNC) &_symengine_sexp_symengine_ascii_art, 0},
    {"_symengine_sexp_symengine_version", (DL_FUNC) &_symengine_sexp_symengine_version, 0},
    {"_symengine_sexp_symengine_have_component", (DL_FUNC) &_symengine_sexp_symengine_have_component, 1},
    {"_symengine_sexp_vecbasic_length", (DL_FUNC) &_symengine_sexp_vecbasic_length, 1},
    {"_symengine_sexp_vecbasic_concentrate", (DL_FUNC) &_symengine_sexp_vecbasic_concentrate, 1},
    {"_symengine_sexp_vecbasic_subset", (DL_FUNC) &_symengine_sexp_vecbasic_subset, 2},
    {"_symengine_sexp_vecbasic_get", (DL_FUNC) &_symengine_sexp_vecbasic_get, 2},
    {"_symengine_sexp_vecbasic_assign", (DL_FUNC) &_symengine_sexp_vecbasic_assign, 3},
    {"R_ExternalPtrTag",                         (DL_FUNC) &R_ExternalPtrTag,                         1},
    {NULL, NULL, 0}
};

RcppExport void R_init_symengine(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
